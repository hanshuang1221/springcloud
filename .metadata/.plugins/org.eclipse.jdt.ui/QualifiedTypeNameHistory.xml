<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.SpringBootApplication"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.jboss.logging.Logger"/>
<fullyQualifiedTypeName name="com.netflix.discovery.DiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.ServiceInstance"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.DiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMethod"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="cn.foreverking.custommer.server.service.HelloService"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="java.lang.String"/>
<fullyQualifiedTypeName name="cn.foreverking.move.server.po.UserPO"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="org.apache.http.auth.UsernamePasswordCredentials"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestHeader"/>
<fullyQualifiedTypeName name="java.lang.StringBuilder"/>
<fullyQualifiedTypeName name="java.util.Random"/>
<fullyQualifiedTypeName name="java.lang.Thread"/>
<fullyQualifiedTypeName name="cn.foreverking.custommer.server.po.UserPO"/>
<fullyQualifiedTypeName name="cn.foreverking.custommer.server.service.HelloServiceFallback"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="com.netflix.zuul.ZuulFilter"/>
<fullyQualifiedTypeName name="org.hibernate.validator.internal.util.logging.LoggerFactory"/>
<fullyQualifiedTypeName name="org.apache.logging.log4j.Logger"/>
<fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
<fullyQualifiedTypeName name="org.slf4j.Logger"/>
<fullyQualifiedTypeName name="com.netflix.zuul.context.RequestContext"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="cn.foreverking.zuul.filter.AccessFilter"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="org.springframework.boot.SpringApplication"/>
<fullyQualifiedTypeName name="org.springframework.cloud.context.config.annotation.RefreshScope"/>
<fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.filters.ZuulProperties"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.SpringCloudApplication"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
</qualifiedTypeNameHistroy>
